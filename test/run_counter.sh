#!/bin/sh

# cleanup
echo "\n Cleanup"
rm -rf obj_dir
rm -f top_counter.vcd

# assemble instructions
echo "\n Assembling"
cd counter_test
make counter_test
cd ..

# Changing the instruction memory
sed -i 's/__file__/counter_test\/counter.hex/' fetch/instr_mem.sv
sed -i 's/__file__/memory\/dataram.mem/' memory/ram.sv

# run Verilator to translate Verilog into C++, including C++ testbench
echo "\n Verilating"
verilator -Wall -y "fetch" -y "decode" -y "execute" -y "memory" -y "writeback" -y "pipeline_reg" -y "decode/sign_extend" -y "counter_test" --cc --trace --exe top.sv counter_tb.cpp

# build C++ project via make automatically generated by Verilator
echo "\n Making object"
make -j -C obj_dir/ -f Vtop.mk Vtop

sed -i 's/counter_test\/counter.hex/__file__/' fetch/instr_mem.sv
sed -i 's/memory\/dataram.mem/__file__/' memory/ram.sv

# run executable simulation file
echo "\nRunning simulation"
sudo obj_dir/Vtop
echo "\nSimulation completed"
